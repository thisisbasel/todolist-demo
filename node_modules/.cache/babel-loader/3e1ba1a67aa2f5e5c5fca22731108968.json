{"remainingRequest":"/Users/baselhussein/hm2/node_modules/babel-loader/lib/index.js!/Users/baselhussein/hm2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baselhussein/hm2/src/views/TodoView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/baselhussein/hm2/src/views/TodoView.vue","mtime":1618774207033},{"path":"/Users/baselhussein/hm2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/baselhussein/hm2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZGIgfSBmcm9tICIuLi9maXJlYmFzZUNvbmZpZy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAidG9kb1ZpZXciLAogIHByb3BzOiBbImlkIl0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2s6IHsKICAgICAgICBsb2FkaW5nOiB0cnVlCiAgICAgIH0KICAgIH07CiAgfSwKICBiZWZvcmVVcGRhdGU6IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpIHsKICAgIGlmICghdGhpcy50YXNrKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvNDA0JyksIGNvbnNvbGUubG9nKCI0MDQiKTsgLy8geW91IGNvdWxkLCBvZiBjb3Vyc2UsIGFsc28gdXNlIHRoZSByb3V0ZXIgdG8gYWN0dWFsbHkgZ28gdG8gYSA0MDQgcGFnZSBpZiB5b3Ugd2FudGVkLgogICAgfQogIH0sCiAgZmlyZXN0b3JlOiBmdW5jdGlvbiBmaXJlc3RvcmUoKSB7CiAgICByZXR1cm4gewogICAgICB0YXNrOiBkYi5jb2xsZWN0aW9uKCJ0YXNrcyIpLmRvYyh0aGlzLmlkKQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVRhc2s6IGZ1bmN0aW9uIHVwZGF0ZVRhc2sodGFzaykgewogICAgICBkYi5jb2xsZWN0aW9uKCd0YXNrcycpLmRvYyh0YXNrLmlkKS51cGRhdGUodGFzayk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvdG9kb3MnKTsKICAgIH0sCiAgICBkb0RlbGV0ZTogZnVuY3Rpb24gZG9EZWxldGUoKSB7CiAgICAgIHRoaXMuJGZpcmVzdG9yZVJlZnMudGFzay5kZWxldGUoKSwgdGhpcy4kcm91dGVyLnB1c2goJy90b2RvcycpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["TodoView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,EAAA,QAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAGA,EAAA,KAAA,EAAA,CAAA,IAAA,CAHA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA;AADA,KAAA;AAGA,GATA;AAWA,EAAA,YAXA,0BAWA;AACA,QAAA,CAAA,KAAA,IAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,MAAA,GACA,OAAA,CAAA,GAAA,CAAA,KAAA,CADA,CADA,CAGA;AACA;AACA,GAjBA;AAmBA,EAAA,SAAA,EAAA,qBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,EAAA,EAAA,MAAA,CAAA,IAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,KAJA;AAKA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,cAAA,CAAA,IAAA,CAAA,MAAA,IACA,KAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CADA;AAGA;AATA;AAxBA,CAAA","sourcesContent":["<template>\n\n<div>\n    <h1>Edit Your ToDo</h1>\n  \n    <router-link to=\"/todos\">Back to ToDo</router-link>\n    <br>\n\n    <div class=\"textContent\" v-if=\"task\" > \n    \n        {{task.task}}\n    </div>\n\n    <form v-if=\"this.$route.params.id\" v-on:submit.prevent=\"updateTask(task)\">\n            <input v-model=\"task.task\">\n            <br>\n            <p>Done<input type='checkbox' v-model='task.completed'></p>\n            <button type=\"submit\">Click to Update</button>\n    </form>\n\n    <div>(<span class=\"clickable\" @click=\"doDelete\">Delete</span>)</div>\n    \n    \n</div>\n</template>\n<script>\n\nimport { db } from \"../firebaseConfig.js\"\n\nexport default {\n    name: \"todoView\",\n    \n    props: [\"id\"],\n\n    data: function() {\n        return {\n            task: {loading: true}\n        };\n    },\n\n    beforeUpdate() {\n        if (!this.task) {\n            this.$router.push('/404'), \n            console.log(\"404\")\n            // you could, of course, also use the router to actually go to a 404 page if you wanted.\n        }\n    },\n\n    firestore: function() {\n        return {\n            task: db.collection(\"tasks\").doc(this.id)\n        }\n    },\n    methods: {\n        updateTask(task) {\n            db.collection('tasks').doc(task.id).update(task);\n            this.$router.push('/todos')\n        },\n        doDelete: function() {\n            this.$firestoreRefs.task.delete(),\n            this.$router.push('/todos')\n        \n        },\n    }\n    \n\n\n}\n</script>\n\n<style scoped>\n.clickable {\n    cursor: pointer;\n    color:red;\n}\n.textContent{\n    padding: 5% 30% 5% 30%;\n}\n</style>"],"sourceRoot":"src/views"}]}