{"remainingRequest":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baselhussein/hm2/src/views/TodoView.vue?vue&type=style&index=0&id=411918c5&scoped=true&lang=css&","dependencies":[{"path":"/Users/baselhussein/hm2/src/views/TodoView.vue","mtime":1618774207033},{"path":"/Users/baselhussein/hm2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2xpY2thYmxlIHsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGNvbG9yOnJlZDsKfQoudGV4dENvbnRlbnR7CiAgICBwYWRkaW5nOiA1JSAzMCUgNSUgMzAlOwp9Cg=="},{"version":3,"sources":["TodoView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n<div>\n    <h1>Edit Your ToDo</h1>\n  \n    <router-link to=\"/todos\">Back to ToDo</router-link>\n    <br>\n\n    <div class=\"textContent\" v-if=\"task\" > \n    \n        {{task.task}}\n    </div>\n\n    <form v-if=\"this.$route.params.id\" v-on:submit.prevent=\"updateTask(task)\">\n            <input v-model=\"task.task\">\n            <br>\n            <p>Done<input type='checkbox' v-model='task.completed'></p>\n            <button type=\"submit\">Click to Update</button>\n    </form>\n\n    <div>(<span class=\"clickable\" @click=\"doDelete\">Delete</span>)</div>\n    \n    \n</div>\n</template>\n<script>\n\nimport { db } from \"../firebaseConfig.js\"\n\nexport default {\n    name: \"todoView\",\n    \n    props: [\"id\"],\n\n    data: function() {\n        return {\n            task: {loading: true}\n        };\n    },\n\n    beforeUpdate() {\n        if (!this.task) {\n            this.$router.push('/404'), \n            console.log(\"404\")\n            // you could, of course, also use the router to actually go to a 404 page if you wanted.\n        }\n    },\n\n    firestore: function() {\n        return {\n            task: db.collection(\"tasks\").doc(this.id)\n        }\n    },\n    methods: {\n        updateTask(task) {\n            db.collection('tasks').doc(task.id).update(task);\n            this.$router.push('/todos')\n        },\n        doDelete: function() {\n            this.$firestoreRefs.task.delete(),\n            this.$router.push('/todos')\n        \n        },\n    }\n    \n\n\n}\n</script>\n\n<style scoped>\n.clickable {\n    cursor: pointer;\n    color:red;\n}\n.textContent{\n    padding: 5% 30% 5% 30%;\n}\n</style>"]}]}