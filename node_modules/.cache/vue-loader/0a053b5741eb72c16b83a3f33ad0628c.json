{"remainingRequest":"/Users/baselhussein/newhm3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baselhussein/newhm3/src/components/Word.vue?vue&type=style&index=0&id=5070438c&scoped=true&lang=css&","dependencies":[{"path":"/Users/baselhussein/newhm3/src/components/Word.vue","mtime":1618595266859},{"path":"/Users/baselhussein/newhm3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/newhm3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baselhussein/newhm3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baselhussein/newhm3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/newhm3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jbGlja2FibGUgewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgY29sb3I6cmVkOwp9Cg=="},{"version":3,"sources":["Word.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA","file":"Word.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div v-if=\"word\"><router-link :to=\"{name:'WordView', params: {id: word.id}}\"> {{word.word}}</router-link> (<span class=\"clickable\" @click=\"like\">{{word.likes}}</span>) &nbsp; (<span class=\"clickable\" @click=\"doDelete\">delete</span>) </div>\n</template>\n<script>\n// for more information about what's possible with firestore's API: https://firebase.google.com/docs/firestore/quickstart\n// and https://vuefire.vuejs.org/vuefire/#why\nimport {db} from \"../firebaseConfig.js\"\nexport default {\n    name: \"word\",\n    props: [\"id\"],\n    data: function() {\n        return {\n            word: null,\n        };\n    },\n    // when using a prop as part of the binding firestore has to be a function\n    // this is because the \"firestore\" code itself is run before the component exists\n    // making it a function, like data, allows it to be run only once the component is setup.\n    // This won't work if \"id\" changes without re-rendering the component. see https://vuefire.vuejs.org/vuefire/binding-subscriptions.html#programmatic-binding\n    // for ways to work if id is dynamic\n    firestore: function() {\n        return {\n            word: db.collection(\"words\").doc(this.id)\n        }\n    },\n    \n    methods: {\n        like: function() {\n            this.word.likes += 1;\n            // the raw firestore reference.\n            this.$firestoreRefs.word.set(this.word)\n        },\n        doDelete: function() {\n            this.$firestoreRefs.word.delete()\n        },\n    }\n}\n</script>\n\n<style scoped>\n.clickable {\n    cursor: pointer;\n    color:red;\n}\n</style>"]}]}