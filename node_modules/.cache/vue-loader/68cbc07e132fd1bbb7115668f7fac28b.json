{"remainingRequest":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baselhussein/hm2/src/views/ToDo.vue?vue&type=style&index=0&id=1bb174a0&scoped=true&lang=css&","dependencies":[{"path":"/Users/baselhussein/hm2/src/views/ToDo.vue","mtime":1618766051695},{"path":"/Users/baselhussein/hm2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm9uZUxpbmUgewp3aGl0ZS1zcGFjZTogbm93cmFwOwpvdmVyZmxvdzogaGlkZGVuOwp0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKcGFkZGluZzogMSUgMzAlIDElIDMwJTsKfQo="},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA","file":"ToDo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div>\n\n    <h1>Your To Do List</h1>\n    \n        <!-- in theory it would be way more effective to just pass \"word\" here... \n        Writing it this way has 1 and only 1 purpose: examples!-->\n        <word class=\"oneLine\" v-for=\"word in words\" :key=\"word.id\" :id = \"word.id\"/>\n    \n    <input v-model=\"newWord\" />\n    <button @click=\"addWord\" > Add Task </button>\n    <br>\n    <br>\n    <router-link to=\"/done\">Go to Done Page</router-link>\n</div>\n</template>\n<script>\nimport {db} from \"../firebaseConfig.js\"\nimport word from \"../components/Word.vue\"\nexport default {\n    components: {word},\n    name: \"ToDo\",\n    data: function() {\n        return {\n            words: [],\n            newWord: \"\",\n        }\n    },\n\n\n    \n    firestore: {\n        // read a lot\n        words: db.collection(\"words\").orderBy('dateTime', 'desc')\n    },\n\n    methods: {\n        addWord: function() {\n            const newWordRecord = {word: this.newWord, dateTime: new Date()};\n            // add a new word.\n            db.collection(\"words\").add(newWordRecord)\n        },\n    },\n}\n</script>\n\n\n<style scoped>\n.oneLine {\nwhite-space: nowrap;\noverflow: hidden;\ntext-overflow: ellipsis;\npadding: 1% 30% 1% 30%;\n}\n</style>"]}]}