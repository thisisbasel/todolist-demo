{"remainingRequest":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baselhussein/hm2/src/views/ToDo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/baselhussein/hm2/src/views/ToDo.vue","mtime":1618709690867},{"path":"/Users/baselhussein/hm2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baselhussein/hm2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoub25lTGluZSB7Cm92ZXJmbG93OiBoaWRkZW47CnRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwp9Cg=="},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA","file":"ToDo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div>\n\n    <h1>Your To Do List</h1>\n    \n        <!-- in theory it would be way more effective to just pass \"word\" here... \n        Writing it this way has 1 and only 1 purpose: examples!-->\n        <word class='oneLine' v-for=\"word in words\" :key=\"word.id\" :id = \"word.id\"/>\n    \n    <input v-model=\"newWord\" />\n    <button @click=\"addWord\" > Add Task </button>\n    <br>\n    <br>\n    <router-link to=\"/done\">Go to Done Page</router-link>\n</div>\n</template>\n<script>\nimport {db} from \"../firebaseConfig.js\"\nimport word from \"../components/Word.vue\"\nexport default {\n    components: {word},\n    name: \"ToDo\",\n    data: function() {\n        return {\n            words: [],\n            newWord: \"\",\n        }\n    },\n    \n    firestore: {\n        // read a lot\n        words: db.collection(\"words\")\n    },\n\n    methods: {\n        addWord: function() {\n            const newWordRecord = {word: this.newWord};\n            // add a new word.\n            let date = new Date();\n            db.collection(\"words\").add(newWordRecord, date)\n        },\n    },\n}\n</script>\n\n\n<style>\n.oneLine {\noverflow: hidden;\ntext-overflow: ellipsis;\n}\n</style>\n"]}]}